"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunksailing_pairs"] = self["webpackChunksailing_pairs"] || []).push([["docs_pairs_js"],{

/***/ "./docs/pairs.js":
/*!***********************!*\
  !*** ./docs/pairs.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"absent\": () => (/* binding */ absent),\n/* harmony export */   \"byBoatCount\": () => (/* binding */ byBoatCount),\n/* harmony export */   \"byPos\": () => (/* binding */ byPos),\n/* harmony export */   \"byPrevParts\": () => (/* binding */ byPrevParts),\n/* harmony export */   \"getPairsOfficial\": () => (/* binding */ getPairsOfficial),\n/* harmony export */   \"getPrevPartners\": () => (/* binding */ getPrevPartners),\n/* harmony export */   \"locked\": () => (/* binding */ locked),\n/* harmony export */   \"makeNames\": () => (/* binding */ makeNames),\n/* harmony export */   \"makePairs\": () => (/* binding */ makePairs),\n/* harmony export */   \"names\": () => (/* binding */ names),\n/* harmony export */   \"season\": () => (/* binding */ season),\n/* harmony export */   \"slotsLength\": () => (/* binding */ slotsLength),\n/* harmony export */   \"team\": () => (/* binding */ team)\n/* harmony export */ });\n/* harmony import */ var _info_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./info.js */ \"./docs/info.js\");\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./client.js */ \"./docs/client.js\");\n/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/app */ \"./node_modules/firebase/app/dist/esm/index.esm.js\");\n/* harmony import */ var firebase_analytics__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase/analytics */ \"./node_modules/firebase/analytics/dist/esm/index.esm.js\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! firebase/firestore */ \"./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n\n\n\n\n\n\nconst left = document.getElementById('left')\nconst right = document.getElementById('right')\nconst nameList = document.getElementById('listContainer')\nconst pairingHolder = document.getElementById('pairingHolder')\nconst loadHolder = document.getElementById('loadDropContainer')\nconst loadText = document.getElementById('loadText')\nconst loadSaveContainer = document.getElementById('loadSaveContainer')\nconst localSaved = document.getElementById('localSaved')\nconst officialList = document.getElementById('officialList')\nconst loadPermBtn = document.getElementById('loadPermBtn')\nconst seasonSelect = document.getElementById('seasonSelect')\nconst teamSelect = document.getElementById('teamSelect')\n\nconst countNamesHolder = document.getElementById('countNamesHolder')\nconst countWindow = document.getElementById('countWindow')\nconst countButton = document.getElementById('countButton')\n\nconst nameInput = document.getElementById('nameInput')\nconst saveButton = document.getElementById('save')\nconst saveButtonLocal = document.getElementById('saveLocal')\nconst saveButtonOfficial = document.getElementById('saveOfficial')\nconst selectAbsent = document.getElementById('selectAbsent')\nconst selectLocked = document.getElementById('selectLocked')\nconst resetPairs = document.getElementById('resetPairs')\nconst randomPairs = document.getElementById('randomPairs')\n\nconst picModeButton = document.getElementById('picMode')\nconst boatDisplay = document.getElementById('boatDisplay')\nconst betoEl = document.getElementById('betoEl')\n\nconst boatCountRnd = document.getElementById('boatCountRnd')\nconst prevPartRnd = document.getElementById('prevPartRnd')\n\nconst prevPairs = document.getElementById('prevPairs')\nconst prevPairsWindow = document.getElementById('prevPairsWindow')\nconst prevPairsHolder = document.getElementById('prevPairsHolder')\nconst selectedName = document.getElementById('selectedName')\n\nlet picMode = false\nlet selAbsent = false\nlet selLocked = false\nlet byPos = true\nlet byBoatCount = false\nlet byPrevParts = true\nlet absent = []\nlet locked = []\nlet boatDisplayVal = 'true'\n\nlet pageReads = 0\n\n// Initialize Firebase\nconst app = (0,firebase_app__WEBPACK_IMPORTED_MODULE_2__.initializeApp)(_info_js__WEBPACK_IMPORTED_MODULE_0__.firebaseConfig)\nconst analytics = (0,firebase_analytics__WEBPACK_IMPORTED_MODULE_3__.getAnalytics)(app)\nconst db = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_4__.getFirestore)()\n\nconst pairsDB = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_4__.collection)(db, 'pairs')\nconst backupDB = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_4__.collection)(db, 'backup-pairs')\nconst officialDB = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_4__.collection)(db, 'official-pairs')\n\n// getDocs(pairsDB).then((snapshot) => {\n//     snapshot.docs.forEach((doc) => {\n//         console.log(doc.data(), doc.id)\n//     })\n// })\n\nlet mobile = window.matchMedia(`only screen and (max-width: ${_info_js__WEBPACK_IMPORTED_MODULE_0__.mobileSize})`).matches\nconst observer = new ResizeObserver((entries) => {\n  mobile = window.matchMedia(`only screen and (max-width: ${_info_js__WEBPACK_IMPORTED_MODULE_0__.mobileSize})`).matches\n})\nobserver.observe(document.body)\n\nseasonSelect.value = localStorage.getItem('season') ? localStorage.getItem('season') : seasonSelect.value\nlet season = seasonSelect.value\nteamSelect.value = localStorage.getItem('team') ? localStorage.getItem('team') : teamSelect.value\nlet team = teamSelect.value\n\nlet names = _info_js__WEBPACK_IMPORTED_MODULE_0__.people[season][team].map((person) => person.name)\n\nseasonSelect.onchange = async function () {\n  season = seasonSelect.value\n  names = _info_js__WEBPACK_IMPORTED_MODULE_0__.people[season][team].map((person) => person.name)\n  slotsLength = Math.floor(names.length / 2) * 3\n  document.documentElement.style.setProperty('--slotCount', slotsLength / 3)\n  makePairs()\n  makeNames()\n  let snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_4__.getDocs)(officialDB)\n  pageReads++\n  updateOfficial(snapshot)\n  getBoatCount(snapshot)\n  localStorage.setItem('season', season)\n}\n\nteamSelect.onchange = function () {\n  team = teamSelect.value\n  names = _info_js__WEBPACK_IMPORTED_MODULE_0__.people[season][team].map((person) => person.name)\n  slotsLength = Math.floor(names.length / 2) * 3\n  document.documentElement.style.setProperty('--slotCount', slotsLength / 3)\n  makePairs()\n  makeNames()\n  localStorage.setItem('team', team)\n}\n\n// let betoQuotes = ['Hi',\"I'm bad at sailing!\"];\nlet betoClicks = 0\nlet sabrinaClicks = 0\nlet elliottClicks = 0\n\nlet prevClickName = ''\nlet prevClickTime\n\nlet slotsLength = Math.floor(names.length / 2) * 3\ndocument.documentElement.style.setProperty('--slotCount', slotsLength / 3)\ndocument.documentElement.style.setProperty('--colCount', 3)\nconsole.log(slotsLength, 'slotsLength')\n\nparseUrl()\nmakePairs(JSON.parse(window.localStorage.getItem('tempPairs')))\nmakeNames(JSON.parse(window.localStorage.getItem('tempPairs')))\n\ngetLocalSaved()\n// getBoatCount()\n\n// dragging on desktop\nnameList.addEventListener('dragover', (e) => {\n  e.preventDefault()\n  if (!mobile) {\n    const draggingEl = document.querySelector('.dragging')\n    if (draggingEl) nameList.appendChild(draggingEl)\n  }\n})\n\npairingHolder.addEventListener('dragover', (e) => {\n  e.preventDefault()\n\n  const afterElement = getDragAfterElement(e.clientY)\n  const draggingEl = document.querySelector('.dragging2')\n\n  if (afterElement == null && draggingEl) {\n    pairingHolder.appendChild(draggingEl)\n  } else if (draggingEl) {\n    pairingHolder.insertBefore(draggingEl, afterElement)\n  }\n})\n\n// deselecting on mobile\nnameList.addEventListener('click', (e) => {\n  e.preventDefault()\n  if (e.target == nameList && mobile) {\n    const tempSelected = document.querySelector('.selected')\n    if (tempSelected != null || tempSelected != undefined) {\n      nameList.append(tempSelected)\n      tempSelected.classList.remove('selected')\n      console.log('Removed 2')\n    }\n  }\n})\n\n// loadPermBtn.addEventListener('click', async () => {\n//     loadingEl.style.display = 'block'\n//     loadingEl.style.display = 'none'\n\n//     makeNames(json.pairs[0].pairs)\n//     makeNames(json.pairs[0].pairs)\n// })\n\n//Saving pairings\nsaveButton.addEventListener('click', async () => {\n  if (nameInput.value != '') {\n    let pairs = { name: nameInput.value }\n    for (let i = 0; i < slotsLength; i++) {\n      if (i % 3 == 0) {\n        for (let j = 0; j < 3; j++) {\n          if (pairingHolder.children[i / 3].children[j + 1] != undefined && pairingHolder.children[i / 3].children[j + 1].children[0]) {\n            pairs[i + j] = pairingHolder.children[i / 3].children[j + 1].children[0].textContent\n          } else {\n            pairs[i + j] = ''\n          }\n        }\n      }\n    }\n\n    console.log(pairs)\n    nameInput.value = ''\n    loadingEl.style.display = 'block'\n    ;(0,firebase_firestore__WEBPACK_IMPORTED_MODULE_4__.addDoc)(pairsDB, pairs)\n    ;(0,firebase_firestore__WEBPACK_IMPORTED_MODULE_4__.addDoc)(backupDB, pairs)\n    loadingEl.style.display = 'none'\n    // console.log(json)\n\n    //reset\n    makePairs()\n    makeNames()\n  } else {\n    alert('Please Enter Your Name')\n  }\n})\n/*{0: 'Owen', 1: 'Talia', 2: '', 3: 'Nick', 4: 'Fin', 5: '', 6: 'Joseph', 7: 'Holden', 8: '', 9: 'Nelson', 10: 'Cyrus', 11: '', 12: 'Suraj', 13: 'Sharkey', 14: '', 15: 'Adam', 16: 'Gretchen I', 17: '', 18: 'Luke', 19: 'Payton', 20: '', 21: 'Chris', 22: 'Andrea', 23: '', 24: 'Elliott', 25: 'Carson', 26: '', 27: 'Carter', 28: 'Gretchen F', 29: '', 30: 'Jeffrey', 31: 'Stella', 32: '', 33: 'Isaia', 34: 'Maura', 35: '', 36: 'Nolan', 37: 'Kai', 38: '', 39: '', 40: '', 41: '', 42: '', 43: '', 44: '', 45: '', 46: '', 47: '', 48: '', 49: '', 50: '', name: 'temp'} */\nsaveButtonOfficial.addEventListener('click', async () => {\n  if (nameInput.value != '') {\n    if (confirm('Are you sure you want to save these pairings officially?')) {\n      let inputDate = prompt('Enter date of pairings (Leave blank for todays date) (YYYY-MM-DD)')\n      if (inputDate != '' && inputDate.length != 10) {\n        alert('Invalid Date Format')\n        return\n      } else {\n        inputDate = (0,_client_js__WEBPACK_IMPORTED_MODULE_1__.formatDate)(new Date(), 0)\n      }\n      let pairs = { name: nameInput.value, practiceDate: inputDate, season: season }\n      for (let i = 0; i < slotsLength; i++) {\n        if (i % 3 == 0) {\n          for (let j = 0; j < 3; j++) {\n            if (pairingHolder.children[i / 3].children[j + 1] != undefined && pairingHolder.children[i / 3].children[j + 1].children[0]) {\n              pairs[i + j] = pairingHolder.children[i / 3].children[j + 1].children[0].textContent\n            } else {\n              pairs[i + j] = ''\n            }\n          }\n        }\n      }\n\n      console.log(pairs)\n      nameInput.value = ''\n\n      //send to server\n      loadingEl.style.display = 'block'\n      ;(0,firebase_firestore__WEBPACK_IMPORTED_MODULE_4__.addDoc)(officialDB, pairs)\n      loadingEl.style.display = 'none'\n\n      //reset\n      makePairs()\n      makeNames()\n    }\n  } else {\n    alert('Please Enter Your Name')\n  }\n})\nsaveButtonLocal.addEventListener('click', () => {\n  if (nameInput.value != '') {\n    let pairs = { name: nameInput.value }\n    for (let i = 0; i < slotsLength; i++) {\n      if (i % 3 == 0) {\n        for (let j = 0; j < 3; j++) {\n          if (pairingHolder.children[i / 3].children[j + 1] != undefined && pairingHolder.children[i / 3].children[j + 1].children[0]) {\n            pairs[i + j] = pairingHolder.children[i / 3].children[j + 1].children[0].textContent\n          } else {\n            pairs[i + j] = ''\n          }\n        }\n      }\n    }\n    console.log(pairs)\n    nameInput.value = ''\n\n    let oldpairs = JSON.parse(window.localStorage.getItem('pairs'))\n    if ((oldpairs != undefined) & (oldpairs != null)) {\n      oldpairs.push(pairs)\n    } else {\n      oldpairs = []\n      oldpairs.push(pairs)\n    }\n\n    window.localStorage.setItem('pairs', JSON.stringify(oldpairs))\n\n    //reset\n    makePairs()\n    makeNames()\n  } else {\n    alert('Please Enter Your Name')\n  }\n})\n\ncountButton.addEventListener('click', () => {\n  countWindow.style.display = 'block'\n})\ncountWindow.addEventListener('click', (e) => {\n  if (e.target == countWindow) countWindow.style.display = 'none'\n})\nprevPairs.addEventListener('click', (e) => {\n  if (e.target == prevPairs) prevPairs.style.display = 'none'\n})\n\nloadText.addEventListener('click', () => {\n  if (loadText.style.display == 'grid') {\n    loadSaveContainer.style.display = 'none'\n  } else {\n    loadSaveContainer.style.display = 'grid'\n  }\n})\nloadSaveContainer.addEventListener('click', (e) => {\n  if (e.target == loadSaveContainer) loadSaveContainer.style.display = 'none'\n})\n\nselectAbsent.addEventListener('click', () => {\n  selAbsent = !selAbsent\n  selectAbsent.classList.toggle('absent')\n})\nselectLocked.addEventListener('click', () => {\n  selLocked = !selLocked\n  selectLocked.classList.toggle('locked')\n})\n\n//Reset pairs button\nresetPairs.addEventListener('click', () => {\n  makeNames()\n  makePairs()\n  locked = []\n  absent = []\n\n  saveTemp()\n\n  document.querySelectorAll('.name').forEach((name) => {\n    if (name.classList.contains('absent')) name.classList.remove('absent')\n    if (name.classList.contains('locked')) name.classList.remove('locked')\n  })\n})\n\nboatDisplay.addEventListener('click', () => {\n  if (boatDisplayVal == 'true') {\n    boatDisplayVal = 'false'\n  } else {\n    boatDisplayVal = 'true'\n  }\n  document.querySelectorAll('.pairSlotHolder').forEach((slot) => {\n    slot.setAttribute('boatDisplay', boatDisplayVal)\n  })\n})\n\nfunction makePairs(inputPairs) {\n  // Creates pair slots either empty or populated with inputPairs object\n  // deletes all previous pair slots\n  while (pairingHolder.firstChild) {\n    pairingHolder.removeChild(pairingHolder.firstChild)\n  }\n  let newNames\n  // console.log(inputPairs)\n  if (inputPairs != undefined) {\n    let newInput = Object.values(inputPairs)\n    if (newInput.length <= slotsLength - 6) {\n      newNames = newInput.slice(0, (slotsLength / 3) * 2)\n      for (let i = 0; i < newNames.length; i++) {\n        if (i % 3 == 2) {\n          newNames.splice(i, 0, '')\n        }\n      }\n    } else {\n      newNames = Object.values(inputPairs)\n    }\n  }\n  // console.log(newNames)\n  // Creates all pair slots\n  for (let i = 0; i < slotsLength; i++) {\n    if (i % 3 == 0) {\n      const pairSlotHolder = document.createElement('div')\n      pairSlotHolder.classList.add('pairSlotHolder')\n      pairSlotHolder.setAttribute('boatDisplay', boatDisplayVal)\n      pairSlotHolder.setAttribute('draggable', true)\n\n      pairSlotHolder.addEventListener('dragstart', (e) => {\n        if (e.target == pairSlotHolder) pairSlotHolder.classList.add('dragging2')\n      })\n      pairSlotHolder.addEventListener('dragend', () => {\n        pairSlotHolder.classList.remove('dragging2')\n      })\n      const pairSlotDrag = document.createElement('div')\n      pairSlotDrag.classList.add('pairDrag', 'fa-lg', 'fa-bars', 'fa-solid')\n      // pairSlotDrag.addEventListener('dragend')\n      pairSlotHolder.appendChild(pairSlotDrag)\n\n      for (let j = 0; j < 3; j++) {\n        const pairSlotEl = document.createElement('div')\n        pairSlotEl.classList.add('pairSlot')\n\n        //If input pairing supplied then populate with new name  && i % 3 != 2\n        if (inputPairs != undefined && newNames[i + j] != '' && newNames[i + j] != undefined) {\n          const nameEl = makeName(newNames[i + j])\n          pairSlotEl.appendChild(nameEl)\n        }\n\n        //add event listeners\n        pairSlotEl.addEventListener('click', (e) => {\n          const tempSelected = document.querySelector('.selected')\n          if (tempSelected != null || tempSelected != undefined) {\n            pairSlotEl.append(tempSelected)\n            if (e.target != tempSelected) {\n              tempSelected.classList.remove('selected')\n              // console.log(\"Removed 3\")\n              saveTemp()\n            }\n          }\n        })\n        pairSlotEl.addEventListener('dragover', (e) => {\n          e.preventDefault()\n          // console.log(e)\n          if (!mobile) {\n            const draggingEl = document.querySelector('.name.dragging')\n            // console.log(draggingEl)\n            // console.log(pref[names.indexOf(draggingEl.textContent)]);\n            if (pairSlotEl.childElementCount < 2 && draggingEl) {\n              //&& pref[names.indexOf(draggingEl.textContent)]\n              pairSlotEl.appendChild(draggingEl)\n            }\n          }\n        })\n        pairSlotHolder.appendChild(pairSlotEl)\n      }\n      pairingHolder.appendChild(pairSlotHolder)\n    }\n  }\n  saveTemp()\n}\nfunction makeNames(inputPairs) {\n  // makes name list without the input parings\n  while (nameList.firstChild) {\n    // removed all previous names\n    nameList.removeChild(nameList.firstChild)\n  }\n  // if input pairs supplied then dont create those names\n  if (inputPairs != undefined) {\n    let tempNames = names.slice()\n    let newNames = Object.values(inputPairs)\n    // console.log('newnames', newNames)\n    let len = newNames.length\n    if (Object.values(inputPairs).length > slotsLength - 6) len--\n    for (let i = 0; i < len; i++) {\n      if (newNames[i] != '' && newNames[i] != undefined) {\n        tempNames.splice(tempNames.indexOf(newNames[i]), 1)\n        // console.log(tempNames)\n      }\n    }\n    console.log('Tempnames:', tempNames)\n    tempNames.forEach((name) => {\n      const nameEl = makeName(name)\n      nameList.appendChild(nameEl)\n      if (absent.includes(nameEl.innerHTML)) {\n        nameEl.classList.add('absent')\n      }\n    })\n  } else {\n    // otherwise make all names\n    names.forEach((name) => {\n      const nameEl = makeName(name)\n      nameList.appendChild(nameEl)\n    })\n  }\n}\nfunction makeName(name) {\n  // creates single name\n  const nameEl = document.createElement('button')\n  if (picMode == false) {\n    nameEl.textContent = name\n  } else {\n    nameEl.innerHTML = name\n    let noPics = ['Adam', 'Alexander', 'Owen', 'Cascade', 'Cyrus', 'Gretchen I', 'Gretchen F', 'Holden', 'Nelson', 'Stella', 'Suraj', 'Zephyr']\n    if (!noPics.includes(name)) {\n      const profilePic = document.createElement('img')\n      profilePic.classList.add('profilePic')\n      profilePic.src = '/img/ppl/' + name + '.png'\n      // if(name == \"Carter\"){\n      //     profilePic.src = people[7].pic;\n      // }\n      nameEl.appendChild(profilePic)\n    }\n  }\n  nameEl.classList.add('name', 'draggable')\n  nameEl.setAttribute('draggable', 'true')\n  if (locked.includes(name)) nameEl.classList.add('locked')\n  if (absent.includes(name)) nameEl.classList.add('absent')\n\n  if (!mobile) {\n    // if on desktop\n    //Event listeners for dragging\n    nameEl.addEventListener('dragstart', () => {\n      nameEl.classList.add('dragging')\n    })\n\n    nameEl.addEventListener('dragend', async () => {\n      for (let i = 0; i < slotsLength / 3; i++) {\n        for (let j = 1; j < 4; j++) {\n          const cur = pairingHolder.children[i].children[j]\n          //console.log(cur)\n          if (cur.childElementCount > 1) {\n            nameList.appendChild(cur.children[0])\n          }\n        }\n      }\n\n      nameEl.classList.remove('dragging')\n      saveTemp()\n      console.log('dragend: ', nameEl.textContent)\n    })\n\n    nameEl.addEventListener('click', async () => {\n      if (selAbsent) {\n        if (!absent.includes(nameEl.innerHTML)) {\n          absent.push(nameEl.innerHTML)\n          nameEl.classList.add('absent')\n          nameList.appendChild(nameEl)\n        } else {\n          absent.splice(absent.indexOf(nameEl.innerHTML), 1)\n          nameEl.classList.remove('absent')\n        }\n        //console.log(absent);\n      } else if (selLocked) {\n        if (!locked.includes(nameEl.innerHTML)) {\n          locked.push(nameEl.innerHTML)\n          nameEl.classList.add('locked')\n        } else {\n          locked.splice(locked.indexOf(nameEl.innerHTML), 1)\n          nameEl.classList.remove('locked')\n        }\n      }\n    })\n  } else {\n    // otherwise mobile\n    nameEl.addEventListener('click', async () => {\n      if (!selAbsent && !selLocked) {\n        const tempSelected = document.querySelector('.selected')\n        if (tempSelected != null || tempSelected != undefined) {\n          nameEl.parentElement.append(tempSelected)\n          nameList.appendChild(nameEl)\n          tempSelected.classList.remove('selected')\n        } else {\n          nameEl.classList.add('selected')\n        }\n      } else if (selAbsent) {\n        if (!absent.includes(nameEl.innerHTML)) {\n          absent.push(nameEl.innerHTML)\n          nameEl.classList.add('absent')\n        } else {\n          absent.splice(absent.indexOf(nameEl.innerHTML), 1)\n          nameEl.classList.remove('absent')\n        }\n        //console.log(absent);\n      } else {\n        if (!locked.includes(nameEl.innerHTML)) {\n          locked.push(nameEl.innerHTML)\n          nameEl.classList.add('locked')\n        } else {\n          locked.splice(locked.indexOf(nameEl.innerHTML), 1)\n          nameEl.classList.remove('locked')\n        }\n      }\n\n      for (let i = 0; i < slotsLength / 3; i++) {\n        for (let j = 0; j < 3; j++) {\n          const cur = pairingHolder.children[i].children[j]\n          //console.log(cur)\n          if (cur.childElementCount > 1) {\n            nameList.appendChild(cur.children[0])\n          }\n        }\n      }\n    })\n  }\n  nameEl.addEventListener('click', async () => {\n    // console.log(prevClickName);\n    let old = document.querySelector('.name.tooltip')\n    if (old) {\n      old.setAttribute('data-tooltip', '')\n      old.classList.remove('tooltip')\n    }\n\n    if (prevClickName == name && Date.now() - prevClickTime < 250) {\n      // nameEl.classList.add('tooltip')\n      let prevParts = await getPrevPartners(name)\n      // if (!mobile) {\n      //   nameEl.setAttribute('data-tooltip', prevParts.join(', '))\n      // } else {\n      while (prevPairsHolder.firstChild) {\n        prevPairsHolder.removeChild(prevPairsHolder.firstChild)\n      }\n      prevPairs.style.display = 'block'\n      selectedName.textContent = name\n      prevParts.forEach((partner) => {\n        const nameEl = document.createElement('div')\n        nameEl.classList.add('name')\n        nameEl.innerHTML = partner\n        prevPairsHolder.appendChild(nameEl)\n      })\n      // }\n    }\n\n    prevClickName = name\n    prevClickTime = Date.now()\n  })\n\n  // if(name == 'Sabrina'){\n  //     nameEl.addEventListener('click', ()=>{\n  //         betoClicks++;\n  //         if(betoClicks == 10){\n  //             betoClicks = 0;\n  //             console.log('Sabrina secret');\n  //             location.href = 'https://smachef.wordpress.com'\n  //         }\n  //     })\n  // }\n  // if(name == 'Elliott'){\n  //     nameEl.addEventListener('click', ()=>{\n  //         elliottClicks++;\n  //         if(elliottClicks == 10){\n  //             elliottClicks = 0;\n  //             console.log('Elliott secret');\n  //             location.href = 'https://open.spotify.com/track/2QhURnm7mQDxBb5jWkbDug?si=806e79489ecd49bb'\n  //             // location.href = 'https://exoplanetresearch.netlify.app/'\n  //         }\n  //     })\n  // }\n\n  return nameEl\n}\n\nfunction saveTemp() {\n  let pairs = { name: 'temp' }\n  // let pairsArray = []\n  for (let i = 0; i < slotsLength; i++) {\n    if (i % 3 == 0) {\n      for (let j = 0; j < 3; j++) {\n        if (pairingHolder.children[i / 3].children[j + 1] != undefined && pairingHolder.children[i / 3].children[j + 1].children[0]) {\n          pairs[i + j] = pairingHolder.children[i / 3].children[j + 1].children[0].textContent\n        } else {\n          pairs[i + j] = ''\n        }\n      }\n    }\n  }\n  console.log('Pairs', pairs)\n\n  window.localStorage.setItem('tempPairs', JSON.stringify(pairs))\n}\n\n(0,firebase_firestore__WEBPACK_IMPORTED_MODULE_4__.onSnapshot)(pairsDB, async (snapshot) => {\n  pageReads++\n  loadingEl.style.display = 'block'\n  let namesObj = {}\n  snapshot.docs.forEach((doc) => {\n    namesObj[doc.data().name] = doc.id\n  })\n  let names = Object.keys(namesObj)\n\n  // if names exist create buttons for them\n  if (names.length > 0) {\n    while (loadHolder.firstChild) {\n      // remove old buttons\n      loadHolder.removeChild(loadHolder.firstChild)\n    }\n    // loop through names and create button\n    for (let i = 0; i < names.length; i++) {\n      const loadNameHolder = document.createElement('div')\n      loadNameHolder.classList.add('loadNameHolder')\n\n      const loadName = document.createElement('button')\n      loadName.classList.add('loadName')\n      loadName.textContent = names[i]\n      let tempName = loadName.textContent.replace(' ', '%20')\n      let tempSeason = season[0] + season[season.length - 2] + season[season.length - 1]\n      let link = `https://www.bhspairs.cf/?${tempSeason}/?p/${tempName}`\n      loadName.addEventListener('click', async () => {\n        // console.log(namesObj)\n        let pairs = await getPairs(namesObj[names[i]])\n        // window.location.href = link\n\n        // if pairs exist create them\n        if (pairs != null) {\n          makeNames(pairs)\n          makePairs(pairs)\n          nameInput.value = ''\n        } else {\n          makeNames()\n          makePairs()\n          alert('No pairs saved under this name.')\n        }\n        loadSaveContainer.style.display = 'none'\n      })\n\n      //Delete button\n      if (!mobile) {\n        const loadDel = document.createElement('button')\n        loadDel.classList.add('loadDel')\n        const loadDelIcon = document.createElement('i')\n        loadDelIcon.classList.add('fa-trash', 'fa-solid', 'fa-lg')\n        loadDel.appendChild(loadDelIcon)\n        loadDel.addEventListener('click', async () => {\n          loadingEl.style.display = 'block'\n          const docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_4__.doc)(db, 'pairs', namesObj[names[i]])\n          await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_4__.deleteDoc)(docRef)\n          loadingEl.style.display = 'none'\n        })\n\n        const copyLink = document.createElement('button')\n        copyLink.classList.add('loadDel')\n        const copyLinkIcon = document.createElement('i')\n        copyLinkIcon.classList.add('fa-copy', 'fa-solid', 'fa-lg')\n        copyLink.appendChild(copyLinkIcon)\n        copyLink.addEventListener('click', () => {\n          navigator.clipboard.writeText(link)\n        })\n\n        loadNameHolder.appendChild(loadName)\n        loadNameHolder.appendChild(copyLink)\n        loadNameHolder.appendChild(loadDel)\n      } else {\n        loadNameHolder.appendChild(loadName)\n      }\n      loadHolder.appendChild(loadNameHolder)\n    }\n  }\n  loadingEl.style.display = 'none'\n})\n\n;(0,firebase_firestore__WEBPACK_IMPORTED_MODULE_4__.onSnapshot)(officialDB, (snapshot) => {\n  pageReads++\n  updateOfficial(snapshot)\n  getBoatCount(snapshot)\n})\n\nfunction updateOfficial(snapshot) {\n  console.log(`Updating official w/${snapshot.docs}`)\n  let namesObj = {}\n  snapshot.docs.forEach((doc) => {\n    console.log(doc.data().season == season)\n    if (doc.data().season == season) namesObj[doc.data().name] = doc.id\n  })\n  let names = Object.keys(namesObj)\n  let sorted = names.sort(_client_js__WEBPACK_IMPORTED_MODULE_1__.compareFn)\n\n  while (officialList.firstChild) {\n    // remove old buttons\n    officialList.removeChild(officialList.firstChild)\n  }\n\n  if (names.length > 0) {\n    // loop through names and create button\n    for (let i = 0; i < sorted.length; i++) {\n      const loadNameHolder = document.createElement('div')\n      loadNameHolder.classList.add('loadNameHolder')\n\n      const loadName = document.createElement('button')\n      loadName.classList.add('loadName')\n      loadName.textContent = sorted[i]\n      let tempName = loadName.textContent.replace(' ', '%20')\n      let tempSeason = season[0] + season[season.length - 2] + season[season.length - 1]\n      let link = `https://www.bhspairs.cf/?${tempSeason}/?o/${tempName}`\n      loadName.addEventListener('click', async () => {\n        //on click get pairings from server\n        loadingEl.style.display = 'block'\n        let pairs = await getPairsOfficialOne(namesObj[sorted[i]])\n        loadingEl.style.display = 'none'\n\n        // window.location.href = link\n        // if pairs exist create them\n        if (pairs != null) {\n          makeNames(pairs)\n          makePairs(pairs)\n          nameInput.value = ''\n        } else {\n          makeNames()\n          makePairs()\n          alert('No pairs saved under this name.')\n        }\n        loadSaveContainer.style.display = 'none'\n      })\n      loadNameHolder.appendChild(loadName)\n      if (!mobile) {\n        const copyLink = document.createElement('button')\n        copyLink.classList.add('loadDel')\n        const copyLinkIcon = document.createElement('i')\n        copyLinkIcon.classList.add('fa-copy', 'fa-solid', 'fa-lg')\n        copyLink.appendChild(copyLinkIcon)\n        copyLink.addEventListener('click', () => {\n          navigator.clipboard.writeText(link)\n        })\n        loadNameHolder.appendChild(copyLink)\n      }\n\n      officialList.appendChild(loadNameHolder)\n    }\n  }\n  console.log('PAGE READS:', pageReads)\n}\n\n//Gets list of saved paring names from server\nfunction getLocalSaved() {\n  let curPairs = JSON.parse(window.localStorage.getItem('pairs'))\n  console.log(curPairs)\n  if (curPairs != null) {\n    while (localSaved.firstChild) {\n      // remove old buttons\n      localSaved.removeChild(localSaved.firstChild)\n    }\n    // loop through names and create button\n    for (let i = 0; i < curPairs.length; i++) {\n      const loadNameHolder = document.createElement('div')\n      loadNameHolder.classList.add('loadNameHolder')\n\n      const loadName = document.createElement('button')\n      loadName.classList.add('loadName')\n      loadName.textContent = curPairs[i].name\n      loadName.addEventListener('click', () => {\n        // if pairs exist create them\n        if (curPairs[i] != null) {\n          makeNames(curPairs[i])\n          makePairs(curPairs[i])\n          nameInput.value = ''\n        } else {\n          getLocalSaved()\n          makeNames()\n          makePairs()\n          alert('No pairs saved under this name.')\n        }\n      })\n\n      //Delete button\n      if (!mobile) {\n        const loadDel = document.createElement('button')\n        loadDel.classList.add('loadDel')\n        const loadDelIcon = document.createElement('i')\n        loadDelIcon.classList.add('fa-trash', 'fa-solid', 'fa-lg')\n        loadDel.appendChild(loadDelIcon)\n        loadDel.addEventListener('click', () => {\n          curPairs.splice(i, 1)\n          console.log(curPairs)\n          window.localStorage.setItem('pairs', JSON.stringify(curPairs))\n          getLocalSaved()\n        })\n        loadNameHolder.appendChild(loadDel)\n      }\n      loadNameHolder.appendChild(loadName)\n      localSaved.appendChild(loadNameHolder)\n    }\n  }\n}\n\nfunction getBoatCount(snapshot, rtn) {\n  let pairingsObj = {}\n  snapshot.docs.forEach((doc) => {\n    pairingsObj[doc.id] = doc?.data()\n  })\n  let pairings = Object.values(pairingsObj)\n\n  let fjCount = new Array(names.length).fill(0)\n  let c420Count = new Array(names.length).fill(0)\n  let e420Count = new Array(names.length).fill(0)\n\n  let fjCut = 8 * 3\n  let e420Cut = fjCut + 6 * 3\n  let c420Cut = e420Cut + 2 * 3\n\n  for (let i = 0; i < pairings.length; i++) {\n    console.log(Object.values(pairings[i]).length)\n    for (let j = 0; j < fjCut; j++) {\n      fjCount[names.indexOf(pairings[i][j])]++\n    }\n    for (let j = fjCut; j < e420Cut; j++) {\n      e420Count[names.indexOf(pairings[i][j])]++\n    }\n    for (let j = e420Cut; j < c420Cut; j++) {\n      c420Count[names.indexOf(pairings[i][j])]++\n    }\n  }\n  // console.log(\"Boat count\",names,fjCount,c420Count,e420Count);\n  if (rtn == undefined) {\n    let girls = ['Elliott', 'Ava', 'Sabrina', 'Talia']\n    for (let i = 0; i < names.length; i++) {\n      const nameEl = document.createElement('div')\n      nameEl.classList.add('countName')\n      nameEl.innerHTML = names[i]\n\n      const gapEl = document.createElement('div')\n      gapEl.style.flexGrow = 1\n      nameEl.appendChild(gapEl)\n\n      const fjCountEl = document.createElement('div')\n      fjCountEl.classList.add('boatCount')\n      fjCountEl.innerHTML = fjCount[i]\n      nameEl.appendChild(fjCountEl)\n\n      const c420CountEl = document.createElement('div')\n      c420CountEl.classList.add('boatCount')\n      c420CountEl.innerHTML = c420Count[i]\n      nameEl.appendChild(c420CountEl)\n\n      const e420CountEl = document.createElement('div')\n      e420CountEl.classList.add('boatCount')\n      e420CountEl.innerHTML = e420Count[i]\n      nameEl.appendChild(e420CountEl)\n\n      if (fjCount[i] - c420Count[i] - e420Count[i] < 0 && !girls.includes(names[i])) {\n        nameEl.setAttribute('boat-karma', 'positive')\n      }\n      if (fjCount[i] - c420Count[i] - e420Count[i] > 0 && !girls.includes(names[i])) {\n        nameEl.setAttribute('boat-karma', 'negative')\n      }\n\n      countNamesHolder.appendChild(nameEl)\n    }\n  } else {\n    let karmalist = {}\n    for (let i = 0; i < names.length; i++) {\n      karmalist[names[i]] = fjCount[i] - c420Count[i] - e420Count[i]\n    }\n    const sortable = Object.entries(karmalist)\n      .sort((a, b) => a[1] - b[1])\n      .map((el) => el[0])\n    return sortable\n  }\n}\n\nasync function getPrevPartners(name, pairings) {\n  let partners = []\n\n  if (pairings == undefined) {\n    // let options = {\n    //     method: 'POST',\n    //     headers: { 'Content-Type': 'application/json' },\n    //     body: JSON.stringify({}),\n    // }\n    loadingEl.style.display = 'block'\n    // const response = await fetch(API_URL + '/getPairsOfficial', options)\n    // pairings = await response.json()\n    pairings = await getPairsOfficial()\n    pageReads++\n    loadingEl.style.display = 'none'\n  }\n\n  pairings = Object.values(pairings).sort(_client_js__WEBPACK_IMPORTED_MODULE_1__.compareFnObj)\n\n  for (let i = 0; i < pairings.length; i++) {\n    let nameIndex = Object.values(pairings[i]).indexOf(name)\n\n    if (Object.values(pairings[i]).includes(name)) {\n      //if skipper slot and isnt empty crew\n      if (nameIndex % 3 == 0 && pairings[i][nameIndex + 1] != undefined && pairings[i][nameIndex + 1] != '') {\n        partners.push(pairings[i][nameIndex + 1])\n\n        //if rotating slot is not empty\n        if (pairings[i][nameIndex + 2] != undefined && pairings[i][nameIndex + 2] != '') {\n          partners.push(pairings[i][nameIndex + 2])\n        }\n\n        //if crew slot and skipper is not empty\n      } else if (nameIndex % 3 == 1 && pairings[i][nameIndex - 1] != undefined && pairings[i][nameIndex - 1] != '') {\n        partners.push(pairings[i][nameIndex - 1])\n\n        //if rotating slot and skipper is not empty\n      } else if (nameIndex % 3 == 2 && pairings[i][nameIndex - 2] != undefined && pairings[i][nameIndex - 2] != '') {\n        partners.push(pairings[i][nameIndex - 2])\n      }\n    }\n  }\n  console.log('Previous partners of ', name, partners)\n  return partners\n}\n\n//Gets the element after the one you are hovering on\nfunction getDragAfterElement(y) {\n  const draggableEls = [...pairingHolder.querySelectorAll('.pairSlotHolder')]\n\n  return draggableEls.reduce(\n    (closest, child) => {\n      const box = child.getBoundingClientRect()\n      const offset = y - box.top - box.height / 2\n\n      if (offset < 0 && offset > closest.offset) {\n        return { offset: offset, element: child }\n      } else {\n        return closest\n      }\n    },\n    { offset: Number.NEGATIVE_INFINITY }\n  ).element\n}\n\nasync function parseUrl() {\n  const urlArgs = window.location.search.split('/', 4)\n  console.log(urlArgs)\n  if (urlArgs[0] == '?F22') season = 'Fall 2022'\n  if (urlArgs[0] == '?S23') season = 'Spring 2023'\n  console.log(season)\n  let pairingName\n  if (urlArgs.length > 3) pairingName = urlArgs[2] + '/' + urlArgs[3]\n  else pairingName = urlArgs[2]\n  if (pairingName != undefined) pairingName = pairingName.replace('%20', ' ')\n  if (urlArgs[1] == '?p') {\n    let options = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ name: pairingName, season: season }),\n    }\n    loadingEl.style.display = 'block'\n    const response = await fetch(API_URL + '/getPairs', options)\n    const json = await response.json()\n    loadingEl.style.display = 'none'\n    console.log(json)\n\n    // if pairs exist create them\n    if (json.pairs != null) {\n      makeNames(json.pairs)\n      makePairs(json.pairs)\n      nameInput.value = ''\n    } else {\n      makeNames()\n      makePairs()\n      alert('No pairs saved under this name.')\n      window.location.href = window.location.href.split('/?')[0]\n    }\n  } else if (urlArgs[1] == '?o') {\n    let options = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ name: pairingName, season: season }),\n    }\n    console.log(options.body)\n    loadingEl.style.display = 'block'\n    const response = await fetch(API_URL + '/getPairsOfficialOne', options)\n    const json = await response.json()\n    loadingEl.style.display = 'none'\n    console.log(json)\n\n    // if pairs exist create them\n    if (json.pairs != null) {\n      makeNames(json.pairs)\n      makePairs(json.pairs)\n      nameInput.value = ''\n    } else {\n      makeNames()\n      makePairs()\n      alert('No pairs saved under this name.')\n    }\n    loadSaveContainer.style.display = 'none'\n  }\n}\n\nasync function getPairs(id) {\n  let data = {}\n  let docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_4__.doc)(db, 'pairs', id)\n  let docSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_4__.getDoc)(docRef)\n  pageReads++\n  return docSnap.data()\n}\n\nasync function getPairsOfficial() {\n  let data = {}\n  let snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_4__.getDocs)(officialDB)\n  pageReads++\n  snapshot.docs.forEach((doc) => {\n    data[doc.id] = doc.data()\n  })\n  return data\n}\nasync function getPairsOfficialOne(id) {\n  let data = {}\n  let docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_4__.doc)(db, 'official-pairs', id)\n  let docSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_4__.getDoc)(docRef)\n  pageReads++\n  return docSnap.data()\n}\n\n\n\n\n//# sourceURL=webpack://sailing-pairs/./docs/pairs.js?");

/***/ })

}]);