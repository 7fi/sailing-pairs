"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunksailing_pairs"] = self["webpackChunksailing_pairs"] || []).push([["docs_randomize_js"],{

/***/ "./docs/randomize.js":
/*!***************************!*\
  !*** ./docs/randomize.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _pairs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pairs.js */ \"./docs/pairs.js\");\n/* harmony import */ var _info_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./info.js */ \"./docs/info.js\");\n\n\nrandomPairs.addEventListener('click', async () => {\n    // console.log(byBoatCount)\n    console.log('settings', _pairs_js__WEBPACK_IMPORTED_MODULE_0__.byPos, _pairs_js__WEBPACK_IMPORTED_MODULE_0__.byBoatCount, _pairs_js__WEBPACK_IMPORTED_MODULE_0__.byPrevParts)\n    //Create locked pair list with blank slots\n    let lockedPairs = []\n    for (let i = 0; i < _pairs_js__WEBPACK_IMPORTED_MODULE_0__.slotsLength / 3; i++) {\n        for (let j = 1; j < 3; j++) {\n            if (pairingHolder.children[i].children[j] != undefined && pairingHolder.children[i].children[j].children[0] != undefined && _pairs_js__WEBPACK_IMPORTED_MODULE_0__.locked.includes(pairingHolder.children[i].children[j].children[0].innerHTML)) {\n                // console.log(i)\n                lockedPairs.push(pairingHolder.children[i].children[j].children[0].innerHTML)\n            } else lockedPairs.push('')\n        }\n    }\n    console.log(lockedPairs)\n\n    //Get list of non absent people\n    let shuffledNames = _pairs_js__WEBPACK_IMPORTED_MODULE_0__.names.slice()\n    if (_pairs_js__WEBPACK_IMPORTED_MODULE_0__.byBoatCount) {\n        shuffledNames = await getBoatCount(true)\n    }\n    console.log(shuffledNames)\n    for (let i = shuffledNames.length - 1; i >= 0; i--) {\n        console.log(shuffledNames[i])\n        if (_pairs_js__WEBPACK_IMPORTED_MODULE_0__.absent.includes(shuffledNames[i]) || lockedPairs.includes(shuffledNames[i])) {\n            console.log(`${shuffledNames[i]} is absent or locked`)\n            shuffledNames.splice(i, 1)\n            // console.log(shuffledNames)\n        }\n    }\n    console.log(shuffledNames)\n\n    let newNames = []\n    if (_pairs_js__WEBPACK_IMPORTED_MODULE_0__.byPos) {\n        let skippers = []\n        let crews = []\n        for (let i = 0; i < shuffledNames.length; i++) {\n            if (_info_js__WEBPACK_IMPORTED_MODULE_1__.people[_pairs_js__WEBPACK_IMPORTED_MODULE_0__.season][_pairs_js__WEBPACK_IMPORTED_MODULE_0__.team][_info_js__WEBPACK_IMPORTED_MODULE_1__.people[_pairs_js__WEBPACK_IMPORTED_MODULE_0__.season][_pairs_js__WEBPACK_IMPORTED_MODULE_0__.team].findIndex((e) => e.name == shuffledNames[i])].skipper && !(skippers.length >= shuffledNames.length / 2)) {\n                skippers.push(shuffledNames[i])\n                // console.log(shuffledNames[i], \" is a skipper \", people[people.findIndex((e) => e.name == shuffledNames[i])].skipper);\n            } else {\n                crews.push(shuffledNames[i])\n            }\n        }\n        console.log(skippers, crews)\n\n        let currentIndex = skippers.length,\n            randomIndex\n        if (!_pairs_js__WEBPACK_IMPORTED_MODULE_0__.byBoatCount) {\n            while (currentIndex != 0) {\n                randomIndex = Math.floor(Math.random() * currentIndex)\n                currentIndex--\n                ;[skippers[currentIndex], skippers[randomIndex]] = [skippers[randomIndex], skippers[currentIndex]]\n            }\n        }\n\n        //shuffle crews\n        ;(currentIndex = crews.length), randomIndex\n\n        while (currentIndex != 0) {\n            randomIndex = Math.floor(Math.random() * currentIndex)\n            currentIndex--\n            ;[crews[currentIndex], crews[randomIndex]] = [crews[randomIndex], crews[currentIndex]]\n        }\n        console.log(skippers, crews)\n\n        //Shuffle skippers here\n\n        let pairings\n        if (_pairs_js__WEBPACK_IMPORTED_MODULE_0__.byPrevParts) {\n            // options = {\n            //     method: 'POST',\n            //     headers: { 'Content-Type': 'application/json' },\n            //     body: JSON.stringify({}),\n            // }\n            // loadingEl.style.display = 'block'\n            // const response = await fetch(API_URL + '/getPairsOfficial', options)\n            // pairings = await response.json()\n            pairings = await (0,_pairs_js__WEBPACK_IMPORTED_MODULE_0__.getPairsOfficial)()\n        }\n\n        let lpI = 0\n        for (let i = 0; i < _pairs_js__WEBPACK_IMPORTED_MODULE_0__.slotsLength / 3; i++) {\n            // find crew for given skipper\n            // console.log('Locked pair', lockedPairs[lpI], lpI)\n            let skipper\n            if (lockedPairs[lpI] != '') {\n                skipper = lockedPairs[lpI]\n                newNames.push(lockedPairs[lpI])\n            } else {\n                skipper = skippers[0]\n                newNames.push(skippers[0])\n                skippers.splice(skippers.indexOf(skippers[0]), 1)\n            }\n            console.log('Skipper:', skipper)\n            lpI++\n            if (skipper) {\n                let crew\n                let prevPairs\n                if (lockedPairs[lpI] != '') crew = lockedPairs[lpI]\n                else {\n                    if (_pairs_js__WEBPACK_IMPORTED_MODULE_0__.byPrevParts) {\n                        prevPairs = await (0,_pairs_js__WEBPACK_IMPORTED_MODULE_0__.getPrevPartners)(skipper, pairings)\n                        for (let j = 0; j < crews.length; j++) {\n                            if (!prevPairs.includes(crews[j])) {\n                                crew = crews[j]\n                                break\n                            }\n                        }\n                    } else {\n                        crew = crews[0]\n                    }\n                    if (crew == undefined && _pairs_js__WEBPACK_IMPORTED_MODULE_0__.byPrevParts) {\n                        let frequency = {}\n                        for (let i = 0; i < prevPairs.length; i++) {\n                            frequency[prevPairs[i]] = prevPairs.filter((x) => x === prevPairs[i]).length\n                        }\n                        console.log('Frequency', frequency)\n                        const sortable = Object.entries(frequency)\n                            .sort((a, b) => a[1] - b[1])\n                            .map((el) => el[0])\n                        let j = 0\n                        while (_pairs_js__WEBPACK_IMPORTED_MODULE_0__.locked.includes(sortable[j]) || _pairs_js__WEBPACK_IMPORTED_MODULE_0__.absent.includes(sortable[j])) j++\n                        crew = sortable[j]\n                    }\n                }\n                newNames.push(crew)\n                crews.splice(crews.indexOf(crew), 1)\n            }\n            console.log('Crews:', crews)\n            lpI++\n            console.log('skippers:', skippers)\n        }\n    } else {\n        let currentIndex = shuffledNames.length,\n            randomIndex\n        if (!_pairs_js__WEBPACK_IMPORTED_MODULE_0__.byBoatCount) {\n            while (currentIndex != 0) {\n                randomIndex = Math.floor(Math.random() * currentIndex)\n                currentIndex--\n                ;[shuffledNames[currentIndex], shuffledNames[randomIndex]] = [shuffledNames[randomIndex], shuffledNames[currentIndex]]\n            }\n        }\n        newNames = shuffledNames\n        if (newNames.length > (_pairs_js__WEBPACK_IMPORTED_MODULE_0__.slotsLength / 3) * 2) {\n            newNames = newNames.slice(0, (_pairs_js__WEBPACK_IMPORTED_MODULE_0__.slotsLength / 3) * 2)\n        }\n    }\n\n    (0,_pairs_js__WEBPACK_IMPORTED_MODULE_0__.makeNames)(newNames)\n    ;(0,_pairs_js__WEBPACK_IMPORTED_MODULE_0__.makePairs)(newNames)\n})\n\n\n//# sourceURL=webpack://sailing-pairs/./docs/randomize.js?");

/***/ })

}]);